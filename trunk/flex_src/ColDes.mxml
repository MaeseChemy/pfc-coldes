<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" 
	applicationComplete="init()" themeColor="#009DFF" 
	xmlns:flexlib="http://code.google.com/p/flexlib/"
	xmlns:lang="es.uc3m.coldes.utils.lang.*"
	pageTitle="UC3M ColDes PFC">

	<mx:Script>
		<![CDATA[
			import es.uc3m.coldes.business.RoomService;
			import es.uc3m.coldes.view.room.RoomView;
			import es.uc3m.coldes.entities.UserRoom;
			import es.uc3m.coldes.entities.Room;
			import mx.events.FlexEvent;
			import mx.core.IFlexDisplayObject;
			import es.uc3m.coldes.utils.popup.ConditionalPopUp;
			import es.uc3m.coldes.module.ModuleInfo;
			import mx.modules.ModuleLoader;
			import es.uc3m.coldes.view.user.UserDataFormUpdate;
			import mx.managers.PopUpManager;
			import es.uc3m.coldes.view.user.UserDataFormRegister;
			import flexlib.events.SuperTabEvent;
			import flexlib.controls.tabBarClasses.SuperTab;
			import es.uc3m.coldes.utils.popup.UtilPopUp;
			import es.uc3m.coldes.entities.User;
			import es.uc3m.coldes.business.UserService;
			import es.uc3m.coldes.utils.lang.ResourceLanguage;
			import mx.validators.Validator;
			import mx.controls.Alert;
			
			/*************************************/
			/**            VARIABLES            **/
			/*************************************/
			[Bindable]
			private var _lang:String;
			public function set lang(lang:String):void{
				_lang = lang;
			}
			public function get lang():String{
				return _lang;
			}
			
			[Bindable]
			private var _userLoged:User;
			public function set userLoged(user:User):void{
				_userLoged = user;
			}
			public function get userLoged():User{
				return _userLoged;
			}
			
			/*************************************/
			/**         INIT FUNCTIONS          **/
			/*************************************/
			
			private function init():void{
				ResourceLanguage.setResources(resourceManager);
				this.changeLocale("es_ES");
				
				primaryVS.selectedChild=loginFacade;
				tabs.setClosePolicyForTab(0, SuperTab.CLOSE_NEVER);
				ExternalInterface.addCallback("closingApp", closingApp);
				
				loadEntities();
			}
			
			private function loadEntities():void{
				var room:Room;
				var user:User;
				var userRoom:UserRoom;	
			}
			
			private function changeLocale(locale:String):void{
				resourceManager.localeChain=[locale];
				lang = locale;
			}
			
			public function closingApp():void{
                if(userLoged != null){
                	//doLogoutClosed();
                }
            }
 
			
			/*************************************/
			/**     COLDES ACCESS FUNCTIONS     **/
			/*************************************/
			private function doLogin():void {
				var errors:Array=Validator.validateAll(validators);
				if (errors.length==0) {
					(new UserService()).doLogin(txtUser.text, txtPassword.text, loginCallback);
				}
			}
			private function loginCallback(user:User):void{
				if (user!=null) {
					signedIn(user);
				}else {
					UtilPopUp.showMessagePopUP(resourceManager.getString('myResources','ERRORTITLE.LOGIN'),
											   resourceManager.getString('myResources','ERROR.LOGIN'));
				}
			}
			private function signedIn(user:User):void {
				txtUser.text="";
				txtPassword.text="";
				//Set user
				userLoged = user;
				labelUsername.text=userLoged.username;
			    if(userLoged.admin){
			    	labelUsername.text+='(ADM)';
			    	menuAdmin.includeInLayout=true;
			    	menuAdmin.visible=true;
			    }
				primaryVS.selectedChild=mainWindow;
			}
			
			private var popUpSalirConditional:ConditionalPopUp;
			private function initDoLogout():void {
				popUpSalirConditional = UtilPopUp.showConditionalPopUP(resourceManager.getString('myResources','MESSAGETITLE.LOGOUT'),
				resourceManager.getString('myResources','MESSAGE.LOGOUT'));
				popUpSalirConditional.addEventListener(FlexEvent.REMOVE, doLogout);
			}
			
			private function doLogoutClosed():void{
				(new UserService()).doLogout(userLoged,logoutCallback);
			}
			
			private function doLogout(event:Event):void{
				if(popUpSalirConditional.answer){
					(new UserService()).doLogout(userLoged,logoutCallback);
				}
			}

			private function logoutCallback(result:Boolean):void {
				cleanSite();
				primaryVS.selectedChild=loginFacade;
			}

			private function cleanSite():void {
				for each (var child:DisplayObject in tabs.getChildren()) {
					if (child!=tabInit) {
						if(child is RoomView){
							var roomViewAux:RoomView = child as RoomView;
							(new RoomService()).roomLogout(userLoged, roomViewAux.room, true, roomLogoutCallback);
						}	
						tabs.removeChild(child);
					}
				}
				//Unselect main buttons
				users.selected = false;
				rooms.selected = false;
				adminitration.selected = false;
				secondaryVS.selectedIndex = 0;
			}
			
			/*************************************/
			/**       REGISTER FUNCTIONS        **/
			/*************************************/
			private function doRegister():void {
				var userReg:UserDataFormRegister = new UserDataFormRegister();
				
				PopUpManager.addPopUp(userReg, this, true);
				PopUpManager.centerPopUp(userReg);
				userReg.callBackFunction = submitUserRegister;
			}
			
			public function submitUserRegister(user:User):void{
				(new UserService()).addUser(user, userRegisterCallback);
			}
			
			private function userRegisterCallback(newUser:String):void{
				if(newUser == ""){
					//User exist
					UtilPopUp.showMessagePopUP(resourceManager.getString('myResources','ERRORTITLE.REGISTER'),
										       resourceManager.getString('myResources','ERROR.REGISTER'));
				}else if (newUser == null){
					//Internal error
					UtilPopUp.showMessagePopUP(resourceManager.getString('myResources','ERRORTITLE.SERVER'),
										       resourceManager.getString('myResources','ERROR.SERVER'));
				}else{
					UtilPopUp.showMessagePopUP(resourceManager.getString('myResources','MESSAGETITLE.REGISTER'),
										       resourceManager.getString('myResources','MESSAGE.REGISTER'));
				}
			}
			
			/*************************************/
			/**        UPDATE FUNCTIONS         **/
			/*************************************/
			private function showPersonalData():void{
				var userUpd:UserDataFormUpdate = new UserDataFormUpdate();
			
				PopUpManager.addPopUp(userUpd, this, true);
				PopUpManager.centerPopUp(userUpd);
				userUpd.management = userLoged.admin;
				userUpd.user = userLoged;
				userUpd.callBackFunction = submitUpdate;
			}
			
			private var userTmp:User;
			public function submitUpdate(user:User, passChange:Boolean):void{
				userTmp = user;
				(new UserService()).updateUser(user, passChange, updateUserCallback);
				
			}
			
			private function updateUserCallback(updateResult:Boolean):void{
				if(updateResult){
					UtilPopUp.showMessagePopUP(resourceManager.getString('myResources','MESSAGETITLE.UPDATE'),
										       resourceManager.getString('myResources','MESSAGE.UPDATE'));
					userLoged = userTmp;
				}else{
					UtilPopUp.showMessagePopUP(resourceManager.getString('myResources','ERRORTITLE.SERVER'),
										       resourceManager.getString('myResources','ERROR.SERVER'));
				}
			}
			
			/*************************************/
			/**           LOAD MODULES          **/
			/*************************************/
			public function loadModule(moduleName:String):void {
				var module:ModuleLoader=tabs.getChildByName(moduleName) as ModuleLoader;
				if (module == null) {
					module=new ModuleLoader();
					module.name=moduleName;
					module.url='es/uc3m/coldes/module/' + moduleName + '.swf';
					module.label=ModuleInfo.getModuleLabel(moduleName,lang);
					module.icon=ModuleInfo.getModuleIcon(moduleName);;
					module.setStyle("closable", true);
					tabs.addChild(module);
				}
				tabs.selectedChild=module;
			}
			
			/*************************************/
			/**       FUNCIONES DE SUBMENUS     **/
			/*************************************/
			
			private function openSubmenu(event:Event):void {
				var buttonClicked:Button=event.target as Button;
				buttonClicked.selected=true;
				if (buttonClicked == users) {
					rooms.selected=false;
					adminitration.selected=false;
					secondaryVS.selectedIndex=1;
				} else if (buttonClicked == rooms) {
					users.selected=false;
					adminitration.selected=false;
					secondaryVS.selectedIndex=2;
				} else if (buttonClicked == adminitration) {
					users.selected=false;
					rooms.selected=false;
					secondaryVS.selectedIndex=3;
				}else {
					buttonClicked.selected=false;
				}
			}
			
			private function handleEventCloseTab(event:SuperTabEvent):void{
				//Remove data from model in case of a Details tab close
				var i:Number = 1;
				var obj:Object = tabs.getChildAt(event.tabIndex);
				if(obj is RoomView){
					var roomViewAux:RoomView = obj as RoomView;
					(new RoomService()).roomLogout(userLoged, roomViewAux.room, false, roomLogoutCallback);
				}
			}
			
			private function roomLogoutCallback(result:Number):void{
				if(result < 0){
					//Error
					UtilPopUp.showMessagePopUP(resourceManager.getString('myResources','ERRORTITLE.REGISTER'),
										       resourceManager.getString('myResources','ERROR.REGISTER'));
				}
			}
			
		]]>
	</mx:Script>
	<mx:Style source="ColDes.css"/>
	
	<mx:ViewStack height="100%" id="primaryVS" width="100%" creationPolicy="all">
		<mx:Canvas height="100%" width="100%"/>	
		<mx:Canvas id="loginFacade" width="100%" height="100%">
			
			<mx:HBox horizontalAlign="right" width="100%" paddingRight="5" paddingTop="5">
				<lang:LangConfig id="btnsLangConfigLogin" />
			</mx:HBox>
			<mx:Canvas horizontalCenter="0" verticalCenter="0">
				<mx:Image source="@Embed('/assets/images/fondologin.png')" horizontalCenter="0"/>
				<mx:Form id="loginForm" defaultButton="{btnAccess}" horizontalCenter="0" verticalCenter="16" paddingTop="10">
					<mx:FormItem label="{resourceManager.getString('myResources','LOGIN.USERNAME')}:" width="100%" labelStyleName="LabelLoginFormItem">
						<mx:TextInput id="txtUser"/>
					</mx:FormItem>
					<mx:FormItem label="{resourceManager.getString('myResources','LOGIN.PASSWORD')}:" width="100%" labelStyleName="LabelLoginFormItem">
						<mx:TextInput id="txtPassword" displayAsPassword="true"/>
					</mx:FormItem>
					<mx:HBox horizontalAlign="center" width="100%" paddingTop="10">
						<mx:Button id="btnRegister" label="{resourceManager.getString('myResources','LOGIN.REGISTER')}" click="doRegister()" width="80" height="30"/>
						<mx:Button id="btnAccess" label="{resourceManager.getString('myResources','LOGIN.ACCESS')}" click="doLogin()" width="80" height="30"/>
					</mx:HBox>
				</mx:Form>
			</mx:Canvas>
		</mx:Canvas>
		 
		<mx:Canvas id="mainWindow">
			<mx:VBox horizontalAlign="center" width="100%" height="100%">
				<mx:Canvas width="100%">	
					<mx:HBox horizontalAlign="left" width="100%" paddingRight="5" paddingTop="5">
						<mx:Button id="btnLogOut" height="20" icon="@Embed(source='assets/images/btnlogout.png')" label="{resourceManager.getString('myResources','MAINWINDOW.LOGOUT')}"
							click="initDoLogout()"/>
						<mx:Label text="{resourceManager.getString('myResources','LOGIN.USERNAME')}:" fontWeight="bold" textDecoration="underline"/>
						<mx:Label id="labelUsername" fontStyle="italic"/>
					</mx:HBox>
					<mx:HBox horizontalAlign="right" width="100%" paddingRight="5" paddingTop="5" horizontalGap="5">
						<lang:LangConfig id="btnsLangConfigMain" />
					</mx:HBox>
				</mx:Canvas>
				
				<flexlib:SuperTabNavigator width="100%" height="100%" id="tabs" closePolicy="{SuperTab.CLOSE_ROLLOVER}"
									   backgroundColor="#FFFFFF" dropEnabled="false" dragEnabled="false" tabClose="handleEventCloseTab(event)">
			
					<mx:VBox id="tabInit" height="100%" width="100%" label="{resourceManager.getString('myResources','MAINWINDOW.TITLE')}" horizontalAlign="center" verticalGap="30"
						 icon="@Embed('/assets/images/icos/home.png')">
						<mx:Grid paddingTop="120" paddingBottom="20" horizontalGap="100" verticalGap="30" id="menu">
							<mx:GridRow width="100%">
								<mx:GridItem width="100%" horizontalAlign="center">
									<mx:Button label="{resourceManager.getString('myResources','MAINWINDOW.USERS')}"
											   styleName="HomeButton" id="users" click="openSubmenu(event)"
											   icon="@Embed(source='assets/images/user.png')"
											   width="300" height="100"/>
								</mx:GridItem>
								<mx:GridItem width="100%" horizontalAlign="center">
									<mx:Button label="{resourceManager.getString('myResources','MAINWINDOW.ROOMS')}" id="rooms" click="openSubmenu(event)"
											   styleName="HomeButton" width="300" height="100"
											   icon="@Embed(source='assets/images/room.png')"/>
								</mx:GridItem>
							</mx:GridRow>
						</mx:Grid>	
						<mx:Grid paddingBottom="20" horizontalGap="100" verticalGap="30" id="menuAdmin" includeInLayout="false" visible="false">
							<mx:GridRow width="100%" horizontalAlign="center">
								<mx:GridItem width="100%" horizontalAlign="center">
									<mx:Button label="{resourceManager.getString('myResources','MAINWINDOW.ADMINISTRATOR')}"
											   styleName="HomeButton" id="adminitration" click="openSubmenu(event)"
											   icon="@Embed(source='assets/images/config.png')"
											   width="300" height="100"/>
								</mx:GridItem>
							</mx:GridRow>
						</mx:Grid>
						<mx:HRule width="{menu.width * 1.1}" styleName="MainHRule" horizontalCenter=""/>
						<mx:ViewStack width="100%" height="100%" id="secondaryVS">
							<mx:HBox horizontalGap="20" horizontalAlign="center" width="100%">
								
							</mx:HBox>
							<mx:HBox width="100%" horizontalGap="20" horizontalAlign="center">
								<mx:Button styleName="HomeButtonSec" textAlign="center" width="250" height="60"
										   icon="@Embed(source='assets/images/mydata.png')" click="showPersonalData()"
										   label="{resourceManager.getString('myResources','MAINWINDOW.MYDATA')}"/>
							</mx:HBox>
							
							<mx:HBox width="100%" horizontalGap="20" horizontalAlign="center">
								<mx:Button styleName="HomeButtonSec" textAlign="center" width="250" height="60"
										   icon="@Embed(source='assets/images/myrooms.png')" click="loadModule('MyRooms')"
										   label="{resourceManager.getString('myResources','MAINWINDOW.MYROOMS')}"/>
								<mx:Button styleName="HomeButtonSec" textAlign="center" width="250" height="60"
										   icon="@Embed(source='assets/images/searchrooms.png')" click="loadModule('SearchRooms')"
										   label="{resourceManager.getString('myResources','MAINWINDOW.SEARCHROOMS')}"/>
								<!--
								<mx:Button styleName="HomeButtonSec" textAlign="center" width="250" height="60"
										   icon="@Embed(source='assets/images/addroom.png')"
										   label="{resourceManager.getString('myResources','MAINWINDOW.CREATEROOM')}"/>
								-->
							</mx:HBox>
							<mx:HBox width="100%" horizontalGap="20" horizontalAlign="center">
								<mx:Button styleName="HomeButtonSec" textAlign="center" width="250" height="60"
										   icon="@Embed(source='assets/images/usersconfig.png')" click="loadModule('UserManagement')"
										   label="{resourceManager.getString('myResources','MAINWINDOW.USERMANAGEMENT')}"/>
								<mx:Button styleName="HomeButtonSec" textAlign="center" width="250" height="60"
										   icon="@Embed(source='assets/images/roomconfig.png')"
										   label="{resourceManager.getString('myResources','MAINWINDOW.ROOMMANAGEMENT')}"/>
							</mx:HBox>
						</mx:ViewStack>
					</mx:VBox>
				</flexlib:SuperTabNavigator>
			</mx:VBox>
		</mx:Canvas>
	</mx:ViewStack>
	<mx:Array id="validators">
		<mx:StringValidator source="{txtUser}" property="text" trigger="{txtUser}" triggerEvent="focusOut"
							required="true" invalid="glowEffect.play([txtUser])"/>
		<mx:StringValidator source="{txtPassword}" property="text" trigger="{txtPassword}" triggerEvent="focusOut"
							required="true" invalid="glowEffect.play([txtPassword])"/>
	</mx:Array>
	<mx:Glow id="glowEffect" color="0xFF0000" duration="1000" alphaFrom="1.0" alphaTo="0"
			 blurXFrom="0.0" blurXTo="30.0" blurYFrom="0.0" blurYTo="30.0"/>
</mx:Application>
