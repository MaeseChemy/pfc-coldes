<?xml version="1.0" encoding="utf-8"?>
<ResizableWindow xmlns="es.uc3m.coldes.utils.ui.resize.*" 
	creationComplete="init()"
	close="close()"
	xmlns:mx="http://www.adobe.com/2006/mxml" resizable="false" movable="false" showCloseButton="true" xmlns:validator="es.uc3m.coldes.utils.validator.*" 
	width="350" horizontalAlign="center" verticalAlign="middle">
	<mx:Script>
		<![CDATA[
			import es.uc3m.coldes.entities.UserResponse;
			import mx.messaging.events.MessageFaultEvent;
			import mx.messaging.events.MessageEvent;
			import mx.events.FlexEvent;
			import es.uc3m.coldes.utils.popup.InvitationTypePopUp;
			import es.uc3m.coldes.entities.UserRoom;
			import mx.controls.Alert;
			import es.uc3m.coldes.entities.Room;
			import es.uc3m.coldes.business.RoomService;
			import es.uc3m.coldes.business.Constants;
			import es.uc3m.coldes.utils.popup.UtilPopUp;
			import mx.managers.PopUpManager;
			import es.uc3m.coldes.view.user.UserDataFormUpdate;
			import es.uc3m.coldes.business.UserService;
			import es.uc3m.coldes.entities.User;
			import mx.collections.ArrayCollection;
			
			[Bindable]
			public var users:ArrayCollection;
			[Bindable]
			public var room:Room;
			
			private function init():void {
				consumer.subscribe();
			}
			
			private function close():void{
				PopUpManager.removePopUp(this);
			}
			
			private function updateUserResponse(username:String, response:Number):void{
				for each (var userRes:UserResponse in users){
					if(userRes.username == username){
						userRes.response = response;
						break;
					}
				}
				users.refresh();
			}
			public function messageSurveyHandler(event:MessageEvent):void {
       			var body:Object = event.message.body;

       			if(room.id == body.room.id){
       				if(body.action == "surveyResponse"){
						updateUserResponse(body.username, body.response);
       				}
       			}
        	}
        	
       		public function faultSurveyHandler(event:MessageFaultEvent):void{
       			UtilPopUp.showMessagePopUP("INTERNAL ERROR",
									   "There was an error performing the operation, contact your application administrator.");
       		}
			
		]]>
	</mx:Script>

	<mx:Consumer id="consumer"
		destination="updateUsersRooms"
		message="messageSurveyHandler(event);"
		fault="faultSurveyHandler(event);"/>
		
	<mx:Canvas width="100%" height="100%">
	<mx:VBox id="vbox" width="100%" height="100%" >

		<mx:DataGrid id="gridUserColDesMan" width="100%" height="200" dataProvider="{users}" verticalScrollPolicy="auto"
			wordWrap="true" variableRowHeight="true" >
			<mx:columns>
				<mx:DataGridColumn width="20" resizable="false" headerText="Usuario">
					<mx:itemRenderer>
						<mx:Component >
							<mx:HBox horizontalAlign="center">
							<mx:Text text="{(data).username}" 
									fontSize="15" fontWeight="bold">
								<mx:Script>
									<![CDATA[
										import es.uc3m.coldes.business.Constants;
									]]>
								</mx:Script>
							</mx:Text>
							</mx:HBox>
						</mx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn  width="10" resizable="false" headerText="Respuesta">
					<mx:itemRenderer>
						<mx:Component >
							<mx:HBox horizontalAlign="center">
							<mx:Image source="{(data).response == Constants.OK?accept:
												(data).response == Constants.NOK?disagree:
												ask}">
								<mx:Script>
									<![CDATA[
										import es.uc3m.coldes.business.Constants;
										
										[Embed('/assets/images/accept.png')]
										public const accept:Class;
										[Embed('/assets/images/disagree.png')]
										public const disagree:Class;
										[Embed('/assets/images/ask.png')]
										public const ask:Class;
									]]>
								</mx:Script>
							</mx:Image>
							</mx:HBox>
						</mx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
			</mx:columns>
		</mx:DataGrid>
	</mx:VBox>
	</mx:Canvas>
</ResizableWindow>
