<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical" width="100%" height="100%"
		   paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10"
		   creationComplete="init()">
	<mx:Script>
		<![CDATA[
			import es.uc3m.coldes.business.Constants;
			import mx.events.FlexEvent;
			import es.uc3m.coldes.utils.popup.UserRoomRegisterPopUp;
			import es.uc3m.coldes.view.room.RoomView;
			import mx.controls.Alert;
			import es.uc3m.coldes.view.room.RoomDataFormRegister;
			import es.uc3m.coldes.business.RoomService;
			import es.uc3m.coldes.entities.Room;
			import es.uc3m.coldes.utils.popup.UtilPopUp;
			import mx.managers.PopUpManager;
			import es.uc3m.coldes.view.user.UserDataFormUpdate;
			import es.uc3m.coldes.business.UserService;
			import es.uc3m.coldes.entities.User;
			import mx.collections.ArrayCollection;
			
			[Bindable]
			private var colDesRooms:ArrayCollection = new ArrayCollection();
			
			private var userLoged:User;
			private function init():void {
				userLoged = parentApplication.userLoged;
				new RoomService().getColDesPublicRooms(callbackColDesRooms);
			}

			private function callbackColDesRooms(rooms:ArrayCollection):void {
				this.colDesRooms=rooms;
				colDesRooms.refresh();
			}

			/* Funcion de filtrado */
			private function roomFilter(obj:Object):Boolean {
				var result:Boolean = false;
				var roomColDes:Room = obj as Room;
				if (searchText.text.length > 0 ) {
					if ((roomColDes.name != null && roomColDes.name.toUpperCase().indexOf(searchText.text.toUpperCase()) != -1) ||
						(roomColDes.owner != null && roomColDes.owner.toUpperCase().indexOf(searchText.text.toUpperCase()) != -1) 
						)
					{
						result = true;
					}
				}
				return result;
			}

			private function filter(event:Event=null):void {
				colDesRooms.filterFunction=roomFilter;
				colDesRooms.refresh();
			}

			public function restart():void {
				init();
				searchText.text="";
			}
			
			private function refresh():void{
				new RoomService().getColDesPublicRooms(callbackColDesRooms);
				searchText.text = "";
			}
			
			/*************************************/
			/**           ENTER ROOM            **/
			/*************************************/
			[Embed('/assets/images/icos/room.png')]
			public static const roomIcon:Class;
			
			private var popUpAgregarSala:UserRoomRegisterPopUp;
			private var roomAgregar:Room;
			private function initEnter(obj:Object):void {
				roomAgregar = obj as Room;
				popUpAgregarSala = UtilPopUp.showUserRoomRegisterPopUP(resourceManager.getString('myResources','MESSAGETITLE.USERROOMREGISTER'),
				resourceManager.getString('myResources','MESSAGE.USERROOMREGISTER'));
				popUpAgregarSala.addEventListener(FlexEvent.REMOVE, enter);
			}
			
			private function enter(event:Event):void{
				if(popUpAgregarSala.answer >= 0){
					(new RoomService()).registerUserRoom(userLoged, roomAgregar, enterCallback);
				}
			}
			
			private function enterCallback(result:Number):void{
				if(popUpAgregarSala.answer > 0){
					//Enter room
					var roomNew:RoomView = parentApplication.tabs.getChildByName(roomAgregar.name) as RoomView;
					if (roomNew == null) {
						roomNew = new RoomView();
						roomNew.room = roomAgregar;
						roomNew.user = userLoged;
						roomNew.userfunction = Constants.COLABORATOR_FUNCTION;
						roomNew.label = roomAgregar.name;
						roomNew.icon = roomIcon;
						parentApplication.tabs.addChild(roomNew);
					}
					parentApplication.tabs.selectedChild=roomNew;
				}

			}
			

		]]>
	</mx:Script>
	
	
	<mx:Canvas width="100%" height="100%">
	<mx:VBox id="vbox" width="100%" height="100%" >
		<mx:HBox width="100%">
			<mx:FormItem label="{resourceManager.getString('myResources','MYROOMS.SEARCH')}:">
				<mx:TextInput id="searchText" enter="filter()"/>
			</mx:FormItem>
			<mx:Button label="{resourceManager.getString('myResources','MYROOMS.SEARCHBTN')}" click="filter()"/>
			<mx:Button label="{resourceManager.getString('myResources','MYROOMS.RESTART')}" click="restart()"/>
			<mx:Button click="refresh()">
				<mx:icon>@Embed(source='../../../../assets/images/refresh.png')</mx:icon>
			</mx:Button>
		</mx:HBox>

		<mx:DataGrid id="gridSearchRoom" width="100%" height="100%" dataProvider="{colDesRooms}" verticalScrollPolicy="auto"
			doubleClick="initEnter(gridSearchRoom.selectedItem)" doubleClickEnabled="true">
			<mx:columns>
				<mx:DataGridColumn headerText="{resourceManager.getString('myResources','MYROOMS.ROOMNAME')}" dataField="name"/>
				<mx:DataGridColumn headerText="{resourceManager.getString('myResources','MYROOMS.OWNERUSERNAME')}" dataField="owner"/>
				<mx:DataGridColumn headerText="{resourceManager.getString('myResources','SEARCHROOM.DESCRIPTION')}" dataField="description"/>
				<mx:DataGridColumn headerText="{resourceManager.getString('myResources','SEARCHROOM.CREATIONDATE')}">
					<mx:itemRenderer>
						<mx:Component >
						<mx:VBox>
	                    <mx:DateFormatter id="formatDateTime" formatString="DD/MM/YYY J:NN:SS" />
	                    <mx:Label text="{formatDateTime.format(data.creationDate)}"/>
						</mx:VBox>
						</mx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn headerText="{resourceManager.getString('myResources','SEARCHROOM.MODIFICATIONDATE')}">
					<mx:itemRenderer>
						<mx:Component >
						<mx:VBox>
	                    <mx:DateFormatter id="formatDateTime" formatString="DD/MM/YYY J:NN:SS" />
	                    <mx:Label text="{formatDateTime.format(data.modificationDate)}"/>
						</mx:VBox>
						</mx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
			</mx:columns>
		</mx:DataGrid>
	</mx:VBox>
	</mx:Canvas>
</mx:Module>

